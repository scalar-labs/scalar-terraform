global:
  scrape_interval:     15s # By default, scrape targets every 15 seconds.
  evaluation_interval: 15s # By default, scrape targets every 15 seconds.
  external_labels:
      environment: "{{ environment_name }}"

{%- set service_list = service_targets.split(',') -%}
{%- set node_list = node_targets.split(',') -%}
{%- set cadvisor_list = cadvisor_targets.split(',') %}

rule_files:
  - general_alert.rules.yml
{%- if "cassandra" in service_list %}
  - cassandra_alert.rules.yml
{%- endif %}
{%- if "scalardl-blue" in service_list and "scalardl-green" in service_list %}
  - scalardl_alert.rules.yml
  - recording.rules.yml
  - envoy_alert.rules.yml
{%- endif %}

# alert
alerting:
  alertmanagers:
  - scheme: http
    static_configs:
    - targets:
      - "{{ alertmanager_url }}"

scrape_configs:
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

{% if "cassandra" in service_list %}
  - job_name: cassandra
    dns_sd_configs:
    - names:
      - _cassandra-exporter._tcp.cassandra.{{ internal_domain }}
    relabel_configs:
    - &relabel_role
      source_labels: ['__meta_dns_name']
      regex: '.*\.([^.]+)\.{{ internal_domain | replace('.', '\\.') }}'
      replacement: ${1}
      target_label: role
{%- endif %}

  - job_name: host
    dns_sd_configs:
    - names:
    {%- for s in node_list %}
      - _node-exporter._tcp.{{ s }}.{{ internal_domain }}
    {%- endfor %}
    relabel_configs:
    - *relabel_role

{% if "reaper" in service_list -%}
  - job_name: reaper
    metrics_path: /prometheusMetrics
    dns_sd_configs:
    - names:
      - _reaper._tcp.reaper.{{ internal_domain }}
    relabel_configs:
    - *relabel_role
{%- endif -%}

{% if "envoy" in service_list %}
  - job_name: envoy
    metrics_path: /stats/prometheus
    dns_sd_configs:
    - names:
      - _envoy-exporter._tcp.envoy.{{ internal_domain }}
    relabel_configs:
    - *relabel_role
{%- endif %}

  - job_name: cadvisor
    scrape_interval: 5s
    metrics_path: /metrics
    dns_sd_configs:
    - names:
    {%- for s in cadvisor_list %}
      - _cadvisor._tcp.{{ s }}.{{ internal_domain }}
    {%- endfor %}
    relabel_configs:
    - *relabel_role
